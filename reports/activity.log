Traceback (most recent call last):
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/jed/cu/numpde/VENV/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
function poisson_sym(x, spoints, forcing; leftbc=(0, zero), rightbc=(0, zero))
    n = length(x)
    L = zeros(n, n)
    rhs = forcing.(x)
    # This loop will need to be modified to go above second order accuracy.
    for i in 2:n-1
        jleft = min(max(1, i-spointsÃ·2), n-spoints+1)
        js = jleft : jleft + spoints - 1
        L[i, js] = -fdstencil(x[js], x[i], 2)
    end
    # You'll need to handle boundary conditions here to achieve second order accuracy
    # I suggest going case by case as in:
    #
    #   if leftbc[1] == 0 # Dirichlet at left endpoint
    #       ... set L and rhs accordingly
    #   elseif leftbc[1] == 1 # Neumann at left endpoint
    #       ...
    #   end
    #
    # Always test the simplest case first. So homogeneous Dirichlet, inhomogeneous Dirichlet,
    # homogeneous Neumann, inhomogeneous Neumann.
    # YOUR CODE HERE
    error("No answer given")
    L, rhs
end

L, rhs = poisson_sym(LinRange(-1, 1, 5), 3, one, leftbc=(0, x -> .5), rightbc=(1, x -> -.5))
display(L)
display(rhs)
x = LinRange(-1, 1, 10)
L, rhs = poisson_sym(x, 3, one, leftbc=(0, x -> .5), rightbc=(0, x -> -.5))
plot(x, L \ rhs, marker=:circle)
------------------

No answer given

Stacktrace:
 [1] poisson_sym(x::LinRange{Float64}, spoints::Int64, forcing::Function; leftbc::Tuple{Int64, var"#15#17"}, rightbc::Tuple{Int64, var"#16#18"})
   @ Main ./In[2]:23
 [2] top-level scope
   @ In[2]:27
 [3] eval
   @ ./boot.jl:360 [inlined]
 [4] include_string(mapexpr::typeof(REPL.softscope), mod::Module, code::String, filename::String)
   @ Base ./loading.jl:1116
LoadError: No answer given

